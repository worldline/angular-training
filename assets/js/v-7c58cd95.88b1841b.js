"use strict";(self.webpackChunkangular_training=self.webpackChunkangular_training||[]).push([[316],{1718:(n,s,a)=>{a.r(s),a.d(s,{default:()=>V});var e=a(6252),t=a(9589),l=a(3749);const o=(0,e.uE)('<h1 id="dynamisez-votre-html" tabindex="-1"><a class="header-anchor" href="#dynamisez-votre-html" aria-hidden="true">#</a> Dynamisez votre HTML</h1><p>Angular apporte une syntaxe puissante aux templates. Dans le chapitre précédent, nous avons vu l&#39;interpolation de texte <code>{{}}</code>. Dans ce chapitre, nous aborderons quelques éléments de ce système de syntaxe : le <em>property binding</em>, l&#39;<em>event binding</em>, le <em>class et style binding</em>, ainsi que les blocs de contrôle de flux.</p><h2 id="property-binding" tabindex="-1"><a class="header-anchor" href="#property-binding" aria-hidden="true">#</a> Property binding</h2><p>Pour lier un élément HTML à la propriété d&#39;un composant, placez-le entre crochets <code>[]</code>. Les crochets, <code>[]</code>, obligent Angular à évaluer le côté droit de l&#39;affectation en tant qu&#39;expression dynamique. Sans les crochets, Angular traite le côté droit comme un littéral et donne pour valeur à la propriété cette valeur statique. <code>[]</code> est la syntaxe pour le one-way data binding avec les données circulant du composant vers le template.</p><p>Voici un exemple où les propriétés du DOM <em>href</em> et <em>disabled</em> sont définies à partir de variable de la classe du composant.</p>',5),p=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("a")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[href]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("url()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("Search on google"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("a")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("button")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[disabled]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("isUnchanged()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("Edit"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("button")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),i=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" url "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'google.com'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" isUnchanged "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token boolean"},"false"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),c=(0,e.uE)('<p><strong>Exercice: Essayez de lier les attributs <code>src</code> et <code>width</code> de l&#39;image aux variables de la classe du composant</strong></p><iframe height="500" width="100%" src="https://stackblitz.com/fork/github/ocunidee/atpw-attributes?ctl=1&amp;embed=1&amp;file=src/app/app.component.html&amp;hideNavigation=1&amp;title=Property%20binding"></iframe><h2 id="class-et-style-binding" tabindex="-1"><a class="header-anchor" href="#class-et-style-binding" aria-hidden="true">#</a> Class et style binding</h2><h3 id="class-binding" tabindex="-1"><a class="header-anchor" href="#class-binding" aria-hidden="true">#</a> Class binding</h3><p>Vous pouvez utiliser le class binding pour ajouter et supprimer des noms de classe CSS à l&#39;attribut <code>class</code> d&#39;un élément. Pour créer un <em>class binding</em> pour une seule classe, utilisez le préfixe <code>class</code> suivi d&#39;un point et du nom de la classe CSS, par exemple, <code>[class.emphasis]=&quot;onSale()&quot;</code>. Angular ajoute la classe <code>emphasis</code> lorsque l&#39;expression liée, <code>onSale()</code>, est vraie et supprime la classe <code>emphasis</code> lorsque l&#39;expression est fausse.</p>',5),u=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("p")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[class.my-class-1]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("isWarning()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("This is a warning text"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("p")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"\x3c!--Le texte est en rouge--\x3e"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"})])],-1),r=(0,e._)("div",{class:"language-css line-numbers-mode","data-ext":"css"},[(0,e._)("pre",{class:"language-css"},[(0,e._)("code",null,[(0,e._)("span",{class:"token selector"},".my-class-1"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},"color"),(0,e._)("span",{class:"token punctuation"},":"),(0,e.Uk)(" red"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),d=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"App"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" isWarning "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),k=(0,e._)("p",null,[(0,e.Uk)("Plusieurs classes peuvent également être liées avec la syntaxe "),(0,e._)("code",null,"[class]"),(0,e.Uk)(" :")],-1),m=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("p")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[class]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("classExpression()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("p")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"})])],-1),v=(0,e._)("div",{class:"language-css line-numbers-mode","data-ext":"css"},[(0,e._)("pre",{class:"language-css"},[(0,e._)("code",null,[(0,e._)("span",{class:"token selector"},".warning"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},"color"),(0,e._)("span",{class:"token punctuation"},":"),(0,e.Uk)(" red"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token selector"},".center"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},"text-align"),(0,e._)("span",{class:"token punctuation"},":"),(0,e.Uk)(" middle"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token selector"},".big"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token property"},"font-size"),(0,e._)("span",{class:"token punctuation"},":"),(0,e.Uk)(" 24px"),(0,e._)("span",{class:"token punctuation"},";"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),g=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"App"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" classExpression "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" warning"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" center"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"false"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" big"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token boolean"},"true"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// syntaxe objet"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// Ces autres syntaxes sont aussi légales:"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// classExpression = signal('warning center big') // syntaxe chaine de caractère"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// classExpression = signal(['warning', 'center', 'big']) // syntaxe tableau"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),_=(0,e.uE)('<h3 id="style-binding" tabindex="-1"><a class="header-anchor" href="#style-binding" aria-hidden="true">#</a> Style binding</h3><p>Vous pouvez utiliser le <em>style binding</em> pour définir des styles de manière dynamique. Pour créer un <em>style binding</em> pour une seule propriété de style CSS, utilisez le préfixe <code>style</code> suivi d&#39;un point et du nom de la propriété de style CSS, par exemple, <code>[style.width]=&quot;slimWidth()&quot;</code> avec <code>protected readonly slimWidth = signal(&#39;100px&#39;)</code> (<code>slimWidth</code> est un signal de chaîne de caractères). Falcutativement, vous pouvez ajouter une unité comme <code>em</code> ou <code>%</code> lorsque pertinent: <code>[style.width.px]=&quot;slimWidth()&quot;</code> avec <code>protected readonly slimWidth = signal(100)</code> (slimWidth est alors le signal d&#39;un nombre).</p>',2),b=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"\x3c!-- Le nom de la propriété de style peut être écrité en dash-case ou camelCase --\x3e"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("nav")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[style.background-color]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("value()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("nav")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("nav")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[style.backgroundColor]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("value()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("nav")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),h=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" value "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"'white'"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),U=(0,e._)("p",null,[(0,e.Uk)("Pour activer plusieurs styles sur une même balise html, utiliser l'attribut "),(0,e._)("code",null,"[style]"),(0,e.Uk)(":")],-1),f=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("p")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[style]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("styleExpression()"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("p")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"})])],-1),y=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" styleExpression "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("width"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'100px'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" height"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'100px'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" backgroundColor"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'red'"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)(),(0,e._)("span",{class:"token comment"},"// Syntaxe objet"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// La syntaxe chaine de caractères est également légale:"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token comment"},"// protected readonly styleExpression = signal('width: 100px; height: 100px; background-color: red;')"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),q=(0,e._)("p",null,[(0,e._)("strong",null,"Exercise: attribuer une classe et une couleur à chaque fantôme en utilisant [class] ou [style]")],-1),w=(0,e._)("iframe",{height:"500",width:"100%",src:"https://stackblitz.com/fork/github/ocunidee/atpw-class-style-binding?ctl=1&embed=1&file=src/app/app.component.html&hideNavigation=1&title=Class%20and%20style%20binding"},null,-1),x=(0,e._)("h2",{id:"directive-ngmodel",tabindex:"-1"},[(0,e._)("a",{class:"header-anchor",href:"#directive-ngmodel","aria-hidden":"true"},"#"),(0,e.Uk)(" Directive ngModel")],-1),z=(0,e._)("p",null,[(0,e.Uk)("La directive "),(0,e._)("code",null,"ngModel"),(0,e.Uk)(" vous permet de lier la valeur d'un champ de formulaire à une propriété du composant. Il s'agit d'une liaison bidirectionnelle : la propriété est mise à jour lorsque le contenu du champ change (typiquement par l'utilisateur) et vice versa. La syntaxe pour la liaison de données bidirectionnelle est "),(0,e._)("code",null,"[()]"),(0,e.Uk)(" (bananes dans la boite).")],-1),C=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("label")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n  What is your name ?\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("input")]),(0,e.Uk)(),(0,e._)("span",{class:"token attr-name"},"[(ngModel)]"),(0,e._)("span",{class:"token attr-value"},[(0,e._)("span",{class:"token punctuation attr-equals"},"="),(0,e._)("span",{class:"token punctuation"},'"'),(0,e.Uk)("name"),(0,e._)("span",{class:"token punctuation"},'"')]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("label")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("p")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("Hello {{ name() }} !"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("p")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"highlight-lines"},[(0,e._)("br"),(0,e._)("br"),(0,e._)("div",{class:"highlight-line"}," "),(0,e._)("br"),(0,e._)("br"),(0,e._)("br")]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),M=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" FormsModule "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/forms'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("FormsModule"),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" name "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token string"},"''"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),L=(0,e._)("p",null,"Testez-le vous-même :",-1),W=(0,e.uE)('<div class="custom-container warning"><p class="custom-container-title">Import</p><p>La directive <code>ngModel</code> ne fait pas partie des imports par défaut du composant. Vous devez l&#39;ajouter vous-même : ajoutez <code>FormsModule</code> au tableau d&#39;imports du décorateur <code>@Component</code> du composant.</p></div><p><strong>Exercice : utilisez [(ngModel)] sur les balises input, select, radio et checkbox</strong></p><iframe height="500" width="100%" src="https://stackblitz.com/fork/github/ocunidee/atpw-ngmodel/tree/master?ctl=1&amp;embed=1&amp;file=src/app/app.component.html&amp;hideNavigation=1&amp;title=NgModel%20directive"></iframe><h2 id="bloc-if" tabindex="-1"><a class="header-anchor" href="#bloc-if" aria-hidden="true">#</a> Bloc @if</h2><p>Vous pouvez ajouter ou supprimer un élément en l&#39;incluant dans un bloc <code>@if</code>. Lorsque la condition du <code>@if</code> est fausse, Angular supprime son contenu du DOM. Angular supprime ensuite les instances des classes de ces composants s&#39;il en existe, ce qui libère de la mémoire et des ressources. Si vous souhaitez uniquement masquer l&#39;élément sans le retirer du DOM, vous pouvez utiliser <code>[hidden]</code> qui ajoute/supprime uniquement la propriété CSS <code>display:none</code> sur l&#39;élément. <code>@if</code> est utile comme moyen de se prémunir des valeurs nulles ou undefined.</p>',5),S=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e._)("span",{class:"token comment"},"\x3c!-- Le message Hello, ... ne sera affiché que si selectedCustomer est ni null ni undefined--\x3e"),(0,e.Uk)("\n@if (selectedCustomer(); as customer) {\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("Hello, {{customer.name}}"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n}\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),A=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" selectedCustomer "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" name"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'Smith'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" age"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"45"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),D=(0,e.uE)('<p>Fournir une expression <code>as</code> n&#39;est pas obligatoire, cependant cette expression permet de donner un alias à la condition fournie au @if et évite une ré-évaluation du signal si celui-ci est utilisé dans le template encapsulé.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Soyez prudent lorsque vous utilisez <code>@if</code> pour tester la nullité sur des valeurs numériques car <code>0</code> est une valeur fausse.</p></div><p>Vous pouvez fournir une instruction else if ou else comme suit :</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>@if (a &gt; b) {\n  {{a}} is greater than {{b}}\n} @else if (b &gt; a) {\n  {{a}} is less than {{b}}\n} @else {\n  {{a}} is equal to {{b}}\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Exercice: utilisez un bloc <code>@if</code> pour montrer/cacher le loader</strong></p><p><strong>Bonus: utilisez un <code>@if</code> et <code>@else</code> pour montrer soit les données soit le message comme quoi les données ne sont pas disponibles</strong></p><iframe height="500" width="100%" src="https://stackblitz.com/fork/github/ocunidee/atpw-if?ctl=1&amp;embed=1&amp;file=src/app/app.component.html&amp;hideNavigation=1&amp;title=@if"></iframe><details class="custom-container details"><summary>Syntaxe avant Angular 17 (directive *ngIf)</summary><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!--Le message Hello, ... ne sera affiché que si selectedCustomer est ni null ni undefined--&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>selectedCustomer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Hello, {{selectedCustomer.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Avec l&#39;ancienne syntaxe, il est possible de fournir un <em>else</em> mais pas un <em>else if</em>:</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>condition; else elseBlock<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Content to render when condition is true.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-template</span> <span class="token attr-name">#elseBlock</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>Content to render when condition is false.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-template</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;ng-template&gt;</code> crée un fragment de template. Un fragment n&#39;est pas affiché (rendered) par défaut. <code>#elseBlock</code> est une variable de template qui permet d&#39;obtenir une référence au <code>&lt;ng-template&gt;</code> et de dire à la directive <code>*ngIf</code> quoi affiché en cas de <em>else</em>.</p></details><h2 id="bloc-switch" tabindex="-1"><a class="header-anchor" href="#bloc-switch" aria-hidden="true">#</a> Bloc @switch</h2><p>Le bloc <code>@switch</code> échange conditionnellement ce qui est affiché en sélectionnant l&#39;un des template enfants en fonction de la valeur de la <em>condition</em>.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>@switch (condition()) {\n  @case (caseA) {\n    Case A.\n  }\n  @case (caseB) {\n    Case B.\n  }\n  @default {\n    Default case.\n  }\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>La valeur de l&#39;expression conditionnelle est comparé à la valeur du cas en utilisant l&#39;opérateur <code>===</code>. <code>@switch</code> ne nécessite pas d&#39;équivalent de break ou return.</p><details class="custom-container details"><summary>Syntaxe avant Angular 17 (directive ngSwitch)</summary><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">[ngSwitch]</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>myBeer<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Ale&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Short fermentation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Lager&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Long fermentation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngSwitchCase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token punctuation">&#39;</span>Sour ale&#39;<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Crafted from wild yeasts<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngSwitchDefault</span><span class="token punctuation">&gt;</span></span>No random knowledge for that type of beer, sorry.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="bloc-for" tabindex="-1"><a class="header-anchor" href="#bloc-for" aria-hidden="true">#</a> Bloc @for</h2><p>Vous pouvez utiliser le bloc <code>@for</code> pour présenter une liste d&#39;éléments. Le contenu du bloc <code>@for</code> est répété pour chaque élément de la collection.</p>',15),E=(0,e._)("div",{class:"language-html line-numbers-mode","data-ext":"html"},[(0,e._)("pre",{class:"language-html"},[(0,e._)("code",null,[(0,e.Uk)("@for (item of items(); track item.id) {\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("{{item.name}}"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n}\n@empty {\n  "),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"<"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("No item found"),(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token tag"},[(0,e._)("span",{class:"token punctuation"},"</"),(0,e.Uk)("div")]),(0,e._)("span",{class:"token punctuation"},">")]),(0,e.Uk)("\n}\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),B=(0,e._)("div",{class:"language-typescript line-numbers-mode","data-ext":"ts"},[(0,e._)("pre",{class:"language-typescript"},[(0,e._)("code",null,[(0,e._)("span",{class:"token keyword"},"import"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" Component"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" signal "),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"from"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'@angular/core'"),(0,e.Uk)("\n\n"),(0,e._)("span",{class:"token decorator"},[(0,e._)("span",{class:"token at operator"},"@"),(0,e._)("span",{class:"token function"},"Component")]),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  selector"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'app-root'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  imports"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"["),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  templateUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.html'"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  styleUrl"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'./app.scss'"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token keyword"},"export"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"class"),(0,e.Uk)(),(0,e._)("span",{class:"token class-name"},"AppComponent"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token keyword"},"protected"),(0,e.Uk)(),(0,e._)("span",{class:"token keyword"},"readonly"),(0,e.Uk)(" items "),(0,e._)("span",{class:"token operator"},"="),(0,e.Uk)(),(0,e._)("span",{class:"token function"},"signal"),(0,e._)("span",{class:"token punctuation"},"("),(0,e._)("span",{class:"token punctuation"},"["),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" id"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"1"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" name"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'hammer'"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" id"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"2"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" name"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'nail'"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n    "),(0,e._)("span",{class:"token punctuation"},"{"),(0,e.Uk)(" id"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token number"},"3"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)(" name"),(0,e._)("span",{class:"token operator"},":"),(0,e.Uk)(),(0,e._)("span",{class:"token string"},"'lightbulb'"),(0,e.Uk)(),(0,e._)("span",{class:"token punctuation"},"}"),(0,e._)("span",{class:"token punctuation"},","),(0,e.Uk)("\n  "),(0,e._)("span",{class:"token punctuation"},"]"),(0,e._)("span",{class:"token punctuation"},")"),(0,e.Uk)("\n"),(0,e._)("span",{class:"token punctuation"},"}"),(0,e.Uk)("\n")])]),(0,e._)("div",{class:"line-numbers","aria-hidden":"true"},[(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"}),(0,e._)("div",{class:"line-number"})])],-1),T=(0,e.uE)('<ul><li><code>item</code> est l&#39;élément courant de la collection lors de l&#39;itération</li><li><code>items</code> est la collection sur laquelle itérer</li><li><code>track</code> indique comment suivre les éléments de la collection. Il doit être un identifiant unique. C&#39;est ce qui permet à Angular d&#39;exécuter un ensemble minimal d&#39;opérations DOM lorsque des élémentsde la collection sont ajoutés, supprimés ou déplacés. Pour les collections qui restent statiques, <code>track $index</code> fournit un mécanisme de suivi simple.</li></ul><p>Un bloc optionnel <code>@empty</code> peut être inclus juste après le bloc <code>@for</code>. Le contenu du bloc <code>@empty</code> s&#39;affiche lorsqu&#39;il n&#39;y a pas d&#39;éléments dans la collection.</p><p>À l&#39;intérieur du bloc <code>@for</code>, plusieurs variables contextuelles implicites sont toujours disponibles : <code>$count</code>, <code>$index</code>, <code>$first</code>, <code>$last</code>, <code>$odd</code> et <code>$even</code>. Elles peuvent être renommées via un segment <code>let</code>, ce qui peut être utile en cas d&#39;utilisation de boucles <code>@for</code> imbriquées où les noms des variables contextuelles pourraient entrer en collision.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code>@for (item of items(); track item.id) {\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{$index}}/{{$count}}: {{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n}\n\n<span class="token comment">&lt;!-- Avec un alias pour $index --&gt;</span>\n@for (item of items(); track item.id; let i = $index) {\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{i}}: {{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n}\n\n<span class="token comment">&lt;!-- Avec un alias pour $even --&gt;</span>\n@for (item of items(); track item.id; let isEven = $even) {\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>{{item.name}} is {{isEven ? &#39;even&#39;: &#39;odd&#39;}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n}\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>Exercice : utilisez deux boucles <code>@for</code> pour afficher tout le contenu du panier (une boucle pour chaque type d&#39;élément, et dans cette boucle une autre boucle pour afficher autant d&#39;emojis de cet élément que sa quantité)</strong></p><p><strong>Bonus : Un intrus est dans la corbeille de fruits, cachez le maïs avec un bloc <code>@if</code></strong></p><iframe height="500" width="100%" src="https://stackblitz.com/fork/github/ocunidee/atpw-for?ctl=1&amp;embed=1&amp;file=src/app/app.component.html&amp;hideNavigation=1&amp;title=@for"></iframe><details class="custom-container details"><summary>Syntaxe avant Angular 17 (directive *ngFor)</summary><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Avec une variable locale pour l&#39;index --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items; let i = index<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{i}}: {{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Avec une variable locale pour connaitre la parité de l&#39;élément courant --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items; let isEven = even<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  {{item.name}} is {{isEven ? &#39;even&#39;: &#39;odd&#39;}}\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>*ngIf</code> et <code>*ngFor</code> ne peuvent pas être placés en même temps sur un élément HTML. Pour répéter un bloc d&#39;HTML lorsqu&#39;une condition particulière est vraie, soit un niveau supplémentaire d&#39;HTML doit être introduit, ce qui n&#39;est pas toujours souhaitable et peut casser le style, soit la balise <code>&lt;ng-container&gt;</code> fournie par Angular peut être utilisée . <code>&lt;ng-container&gt;</code> n&#39;est pas présent dans le DOM.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- Sans ng-container --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>condition<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Avec ng-container (solution à préférer) --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ng-container</span> <span class="token attr-name">*ngIf</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>condition<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">*ngFor</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>let item of items<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{item.name}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ng-container</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h2 id="event-binding" tabindex="-1"><a class="header-anchor" href="#event-binding" aria-hidden="true">#</a> Event binding</h2><p>L&#39;<em>event binding</em> permet d&#39;écouter et de répondre aux actions de l&#39;utilisateur telles que les frappes, les mouvements de souris, les clics et les touchers ou un événement custom émis par un composant enfant. Pour lier le composant à un événement, utilisez la syntaxe d&#39;event binding d&#39;Angular <code>()</code>.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>button</span> <span class="token attr-name">(click)</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>delete()<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Delete<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>button</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>Exercice : utilisez des événements pour ajouter un singe lorsque vous cliquez sur le bouton et faites-lui ouvrir les yeux au survol de la souris</strong></p><iframe height="500" width="100%" src="https://stackblitz.com/fork/github/ocunidee/atpw-event-binding?ctl=1&amp;embed=1&amp;file=src/app/app.component.html&amp;hideNavigation=1&amp;title=Event%20binding"></iframe><h2 id="bloc-let" tabindex="-1"><a class="header-anchor" href="#bloc-let" aria-hidden="true">#</a> Bloc @let</h2><p>Le bloc <code>@let</code> sert à définir une variable locale qui peut être réutilisée dans l&#39;ensemble du template. Elle sera réévaluée chaque fois que le cycle de détection du changement est exécuté. Les variables déclarées avec <code>@let</code> peuvent être utilisées après leur déclaration et dans le scope dans lequel elles ont été déclarées ainsi que dans ses scopes imbriqués. C&#39;est un bloc particulièrement intéressant pour évaluer de la donnée une seule fois et se resservir du résultat plusieurs fois dans le template.</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token comment">&lt;!-- Usage avec une variable de templace référençant un élément du DOM --&gt;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">#name</span><span class="token punctuation">&gt;</span></span>\n\n@let greeting = &#39;Hello &#39; + name.value;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{greeting}}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n\n<span class="token comment">&lt;!-- Usage avec un pipe async --&gt;</span>\n@let user = this.user$ | async;\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>{{user.firstname}} {{user.lastname}} is deactivated<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="a-propos-des-directives" tabindex="-1"><a class="header-anchor" href="#a-propos-des-directives" aria-hidden="true">#</a> À propos des directives</h2><p>Dans ce chapitre, nous avons vu 1 directive intégrée (4 en utilisant la syntaxe prédatant Angular 17). Les directives sont des classes déclarées avec le décorateur <code>@Directive</code>.</p><p>Il existe trois types de directives :</p><ul><li>Les <strong>composants</strong> qui sont des directives avec un template (<code>@Component</code> hérite de <code>@Directive</code>)</li><li>Les <strong>directives d&#39;attributs</strong> qui modifient l&#39;apparence ou le comportement d&#39;un élément</li><li>Les <strong>directives structurelles</strong> qui modifient la mise en page DOM en ajoutant et en supprimant des éléments DOM</li></ul>',20),j={href:"https://angular.dev/guide/attribute-directives",target:"_blank",rel:"noopener noreferrer"},N={href:"https://angular.dev/guide/structural-directives",target:"_blank",rel:"noopener noreferrer"},F=(0,e.uE)('<ul><li><em>Comportement réutilisable</em> : Les directives customs encapsulent des fonctionnalités qui peuvent être réutilisées dans plusieurs composants, aidant ainsi à éviter la duplication de code et à promouvoir une mise en œuvre cohérente de fonctionnalités telles que la validation, la gestion des événements ou le style.</li><li><em>Séparation des préoccupations</em> : En isolant des comportements spécifiques ou des manipulations du DOM au sein des directives, vous pouvez garder vos composants plus propres et plus centrés sur leurs tâches principales, ce qui conduit à une meilleure organisation et maintenabilité du code.</li><li><em>Manipulation dynamique du template</em> : Les directives structurelles personnalisées permettent d&#39;ajouter ou de supprimer conditionnellement des éléments du DOM, offrant des capacités de rendu dynamique puissantes. Cela peut être utilisé pour créer des fonctionnalités telles que des affichages conditionnels (similaires à <code>@if</code>), des boucles (comme <code>@for</code>), ou toute logique personnalisée pour manipuler la mise en page en fonction de l&#39;état de l&#39;application.</li></ul><p><strong>Quizz: Which type of directive is ngModel?</strong></p><h2 id="tp-liste-des-films" tabindex="-1"><a class="header-anchor" href="#tp-liste-des-films" aria-hidden="true">#</a> TP : Liste des films</h2><ol><li>Dans le composant LoginFormComponent, ajoutez deux variables de classe <em>email</em> (<code>protected readonly email = signal(&#39;&#39;)</code>) et <em>password</em> (<code>protected readonly password = signal()&#39;&#39;)</code>) et utilisez la directive <code>[(ngModel)]</code> sur les inputs email et mot de passe dans l&#39;html pour les lier. Rappelez-vous de l&#39;avertissement dans le paragraphe sur le ngModel : n&#39;oubliez pas d&#39;importer le <code>FormsModule</code> dans le tableau d&#39;imports du decorateur <code>@Component</code> pour utiliser la directive ngModel dans le template.</li><li>Ajoutez une variable <code>loggedIn</code> à la classe initialement définie à <code>protected readonly signal(false)</code>, puis utilisez l&#39;event binding sur l&#39;événement <code>(ngSubmit)</code> de la balise <code>&lt;form&gt;</code> pour la passer à <code>true</code> lorsque le formulaire est soumis (créez une méthode <code>login()</code> dans la classe du composant pour ça) et la méthode <code>set</code> du Signal (<code>loggedIn.set(true)</code>).</li><li>Dans <code>login-form.component.html</code>, ajoutez le code HTML suivant sous le formulaire d&#39;authentification :</li></ol><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>films<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>film card<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span>\n      <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>poster<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>film poster<span class="token punctuation">&quot;</span></span>\n      <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://m.media-amazon.com/images/M/MV5BMDdmZGU3NDQtY2E5My00ZTliLWIzOTUtMTY4ZGI1YjdiNjk3XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_SX300.jpg<span class="token punctuation">&quot;</span></span>\n    <span class="token punctuation">/&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>title<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        Titanic\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rating<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>★★★★<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>Release date<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>07/01/1998<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>Director<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>James Cameron<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>Actors<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>Leonardo DiCaprio, Kate Winslet, Billy Zane, Kathy Bates<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>plot<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>\n        84 years later, a 100 year-old woman named Rose DeWitt Bukater tells the\n        story to her granddaughter Lizzy Calvert, Brock Lovett, Lewis Bodine,\n        Bobby Buell and Anatoly Mikailavich on the Keldysh about her life set in\n        April 10th 1912, on a ship called Titanic when young Rose boards the\n        departing ship with the upper-class passengers and her mother, Ruth DeWitt\n        Bukater, and her fiancé, Caledon Hockley. Meanwhile, a drifter and artist\n        named Jack Dawson and his best friend Fabrizio De Rossi win third-class\n        tickets to the ship in a game. And she explains the whole story from\n        departure until the death of Titanic on its first and last voyage April\n        15th, 1912 at 2:20 in the morning.\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>Utilisez un bloc <code>@if</code> pour afficher le formulaire d&#39;authentification et masquer la liste des films lorsque <code>loggedIn() === false</code>, et vice versa.</li><li>Ajoutez le modèle suivant dans le dossier <em>src/app/models</em>, nommez le fichier <em>film.ts</em> :</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">Film</span> <span class="token punctuation">{</span>\n  title<span class="token operator">:</span> <span class="token builtin">string</span>\n  released<span class="token operator">:</span> <span class="token builtin">string</span>\n  director<span class="token operator">:</span> <span class="token builtin">string</span>\n  actors<span class="token operator">:</span> <span class="token builtin">string</span>\n  poster<span class="token operator">:</span> <span class="token builtin">string</span>\n  plot<span class="token operator">:</span> <span class="token builtin">string</span>\n  metascore<span class="token operator">:</span> <span class="token builtin">string</span>\n<span class="token punctuation">}</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="6"><li>Ajoutez le champ suivant dans la classe du composant LoginFormComponent (VSCode devrait vous affichez un erreur et vous proposez d&#39;importer le modèle Film dans le composant) :</li></ol><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">protected</span> <span class="token keyword">readonly</span> films<span class="token operator">:</span> WritableSignal<span class="token operator">&lt;</span>Film<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token function">signal</span><span class="token punctuation">(</span><span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Titanic&#39;</span><span class="token punctuation">,</span>\n    released<span class="token operator">:</span> <span class="token string">&#39;19 Dec 1997&#39;</span><span class="token punctuation">,</span>\n    director<span class="token operator">:</span> <span class="token string">&#39;James Cameron&#39;</span><span class="token punctuation">,</span>\n    actors<span class="token operator">:</span> <span class="token string">&#39;Leonardo DiCaprio, Kate Winslet, Billy Zane, Kathy Bates&#39;</span><span class="token punctuation">,</span>\n    poster<span class="token operator">:</span> <span class="token string">&#39;https://m.media-amazon.com/images/M/MV5BMDdmZGU3NDQtY2E5My00ZTliLWIzOTUtMTY4ZGI1YjdiNjk3XkEyXkFqcGdeQXVyNTA4NzY1MzY@._V1_SX300.jpg&#39;</span><span class="token punctuation">,</span>\n    plot<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string">84 years later, a 100 year-old woman named Rose DeWitt Bukater tells the story to her granddaughter Lizzy Calvert, Brock Lovett, Lewis Bodine, Bobby Buell and Anatoly Mikailavich on the Keldysh about\n    her life set in April 10th 1912, on a ship called Titanic when young Rose boards the departing ship with the upper-class passengers and her mother, Ruth DeWitt Bukater, and her fiancé, Caledon Hockley.\n    Meanwhile, a drifter and artist named Jack Dawson and his best friend Fabrizio De Rossi win third-class tickets to the ship in a game. And she explains the whole story from departure until the death of Titanic\n    on its first and last voyage April 15th, 1912 at 2:20 in the morning.</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">,</span>\n    metascore<span class="token operator">:</span> <span class="token string">&#39;75&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;Blade Runner&#39;</span><span class="token punctuation">,</span>\n    released<span class="token operator">:</span> <span class="token string">&#39;25 Jun 1982&#39;</span><span class="token punctuation">,</span>\n    director<span class="token operator">:</span> <span class="token string">&#39;Ridley Scott&#39;</span><span class="token punctuation">,</span>\n    actors<span class="token operator">:</span> <span class="token string">&#39;Harrison Ford, Rutger Hauer, Sean Young, Edward James Olmos&#39;</span><span class="token punctuation">,</span>\n    poster<span class="token operator">:</span> <span class="token string">&#39;https://m.media-amazon.com/images/M/MV5BNzQzMzJhZTEtOWM4NS00MTdhLTg0YjgtMjM4MDRkZjUwZDBlXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX300.jpg&#39;</span><span class="token punctuation">,</span>\n    plot<span class="token operator">:</span> <span class="token string">&#39;A blade runner must pursue and terminate four replicants who stole a ship in space, and have returned to Earth to find their creator.&#39;</span><span class="token punctuation">,</span>\n    metascore<span class="token operator">:</span> <span class="token string">&#39;89&#39;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token operator">:</span> <span class="token string">&#39;The Shining&#39;</span><span class="token punctuation">,</span>\n    released<span class="token operator">:</span> <span class="token string">&#39;13 Jun 1980&#39;</span><span class="token punctuation">,</span>\n    director<span class="token operator">:</span> <span class="token string">&#39;Stanley Kubrick&#39;</span><span class="token punctuation">,</span>\n    actors<span class="token operator">:</span> <span class="token string">&#39;Jack Nicholson, Shelley Duvall, Danny Lloyd, Scatman Crothers&#39;</span><span class="token punctuation">,</span>\n    poster<span class="token operator">:</span> <span class="token string">&#39;https://m.media-amazon.com/images/M/MV5BZWFlYmY2MGEtZjVkYS00YzU4LTg0YjQtYzY1ZGE3NTA5NGQxXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX300.jpg&#39;</span><span class="token punctuation">,</span>\n    plot<span class="token operator">:</span> <span class="token string">&#39;A family heads to an isolated hotel for the winter where an evil spiritual presence influences the father into violence, while his psychic son sees horrific forebodings from both past and future.&#39;</span><span class="token punctuation">,</span>\n    metascore<span class="token operator">:</span> <span class="token string">&#39;63&#39;</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">]</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="7"><li>En utilisant un bloc <code>@for</code>, répétez l&#39;élément <code>.film.card</code> pour afficher autant de films qu&#39;il y en a dans le tableau <code>films</code>. A ce stade, le Titanic est affiché trois fois, occupons-nous de ça dans l&#39;étape suivante.</li><li>Complétez la carte avec les données de chaque film en utilisant le property binding et l&#39;interpolation de texte.</li><li><strong>Bonus :</strong> Utilisez la propriété <code>metascore</code> pour afficher un nombre d&#39;étoiles (de 1 à 5 ★) à côté de chaque titre de film (créez une méthode <code>starRating</code> retournant une string comportant le bon nombre d&#39;étoiles à cet effet).</li><li><strong>Bonus :</strong> Utilisez un bloc <code>@if</code> pour afficher uniquement les films avec un score métacritique supérieur à 70. Faites attention à quel noeud du DOM vous incluez dans le bloc pour conserver la sémantique du HTML. Dans la suite du TP, nous n&#39;aurons pas besoin de ce changement, ne le conservez pas une fois que vous êtes arrivé à le faire marcher.</li><li>N&#39;oubliez pas de commiter.</li></ol><details class="custom-container details"><summary>Résultat attendu</summary><p><img src="'+t+'" alt="Résultat visuel du TP sur les directives 1"></p><p><img src="'+l+'" alt="Résultat visuel du TP sur les directives 2"></p></details>',11),I={},V=(0,a(3744).Z)(I,[["render",function(n,s){const a=(0,e.up)("CodeGroupItem"),t=(0,e.up)("CodeGroup"),l=(0,e.up)("v-model-example"),I=(0,e.up)("ExternalLinkIcon");return(0,e.wg)(),(0,e.iD)("div",null,[o,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[p])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[i])),_:1})])),_:1}),c,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[u])),_:1}),(0,e.Wm)(a,{title:"app.css"},{default:(0,e.w5)((()=>[r])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[d])),_:1})])),_:1}),k,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[m])),_:1}),(0,e.Wm)(a,{title:"app.css"},{default:(0,e.w5)((()=>[v])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[g])),_:1})])),_:1}),_,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[b])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[h])),_:1})])),_:1}),U,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[f])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[y])),_:1})])),_:1}),q,w,x,z,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[C])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[M])),_:1})])),_:1}),L,(0,e.Wm)(l),W,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[S])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[A])),_:1})])),_:1}),D,(0,e.Wm)(t,null,{default:(0,e.w5)((()=>[(0,e.Wm)(a,{title:"app.html"},{default:(0,e.w5)((()=>[E])),_:1}),(0,e.Wm)(a,{title:"app.ts"},{default:(0,e.w5)((()=>[B])),_:1})])),_:1}),T,(0,e._)("p",null,[(0,e.Uk)("Vous pouvez en savoir plus sur la création de vos propres directives "),(0,e._)("a",j,[(0,e.Uk)("ici"),(0,e.Wm)(I)]),(0,e.Uk)(" et "),(0,e._)("a",N,[(0,e.Uk)("ici"),(0,e.Wm)(I)]),(0,e.Uk)(". Les directives customs ont de nombreux avantages, en voici quelques-uns :")]),F])}]])},8135:(n,s,a)=>{a.r(s),a.d(s,{data:()=>e});const e=JSON.parse('{"key":"v-7c58cd95","path":"/fr/template.html","title":"Dynamisez votre HTML","lang":"fr-FR","frontmatter":{},"headers":[{"level":2,"title":"Property binding","slug":"property-binding","link":"#property-binding","children":[]},{"level":2,"title":"Class et style binding","slug":"class-et-style-binding","link":"#class-et-style-binding","children":[{"level":3,"title":"Class binding","slug":"class-binding","link":"#class-binding","children":[]},{"level":3,"title":"Style binding","slug":"style-binding","link":"#style-binding","children":[]}]},{"level":2,"title":"Directive ngModel","slug":"directive-ngmodel","link":"#directive-ngmodel","children":[]},{"level":2,"title":"Bloc @if","slug":"bloc-if","link":"#bloc-if","children":[]},{"level":2,"title":"Bloc @switch","slug":"bloc-switch","link":"#bloc-switch","children":[]},{"level":2,"title":"Bloc @for","slug":"bloc-for","link":"#bloc-for","children":[]},{"level":2,"title":"Event binding","slug":"event-binding","link":"#event-binding","children":[]},{"level":2,"title":"Bloc @let","slug":"bloc-let","link":"#bloc-let","children":[]},{"level":2,"title":"À propos des directives","slug":"a-propos-des-directives","link":"#a-propos-des-directives","children":[]},{"level":2,"title":"TP : Liste des films","slug":"tp-liste-des-films","link":"#tp-liste-des-films","children":[]}],"git":{},"filePathRelative":"fr/template.md"}')},9589:(n,s,a)=>{n.exports=a.p+"assets/img/visual-1.42504f6c.png"},3749:(n,s,a)=>{n.exports=a.p+"assets/img/visual-2b.1756f3c6.png"}}]);