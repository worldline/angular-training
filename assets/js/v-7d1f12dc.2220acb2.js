"use strict";(self.webpackChunkangular_training=self.webpackChunkangular_training||[]).push([[630],{6155:(e,a,i)=>{i.r(a),i.d(a,{default:()=>o});var t=i(6252),r=i(7695),n=i(8434);const s=[(0,t.uE)('<h1 id="presentation-of-angular" tabindex="-1"><a class="header-anchor" href="#presentation-of-angular" aria-hidden="true">#</a> Presentation of Angular</h1><h2 id="what-is-angular" tabindex="-1"><a class="header-anchor" href="#what-is-angular" aria-hidden="true">#</a> What is Angular ?</h2><p>Angular is more than just a frontend framework with which to build Single Page Applications (SPA). It is a full-fledged development platform built on TypeScript that comprises:</p><ul><li>A component-based framework for building scalable web applications.</li><li>A collection of well-integrated libraries that cover a wide variety of features including routing, form management, client-server communication, progressive web apps and more.</li><li>A suite of developer tools to help you develop, build, test, and update your code via the Angular CLI.</li></ul><p>Angular is developed and maintained by Google, its initial release date was in September 2016. It is a full rewriting of AngularJS and as such is a different framework.</p><h2 id="a-bit-of-history" tabindex="-1"><a class="header-anchor" href="#a-bit-of-history" aria-hidden="true">#</a> A bit of history</h2><p>AngularJS, developed by Google and released in 2010, was a pioneering framework for building dynamic web applications using HTML and JavaScript. Its key features, such as two-way data binding and dependency injection, revolutionized front-end development by allowing developers to build complex applications more efficiently. In 2016, Google released Angular 2, a complete rewrite of AngularJS, introducing a component-based architecture and significant performance improvements. This marked the transition to the modern &quot;Angular&quot; framework (without the &quot;JS&quot;). Subsequent versions, starting from Angular 4, continued to enhance performance, introduce new features like Angular Universal for server-side rendering, and improve tooling with the Angular CLI.</p><h2 id="server-generated-pages-vs-spa-api" tabindex="-1"><a class="header-anchor" href="#server-generated-pages-vs-spa-api" aria-hidden="true">#</a> Server generated pages vs SPA + API</h2><p>There are two common models for developing websites:</p><ul><li>Server-generated pages: <ul><li>The presentation and the data of each page is generated by the server before delivering it to the client</li><li>Generally stateful (it means that data is shared during page navigation using sessions and cookies)</li><li>The UI and business logic are coupled</li><li>The response body is generally heavier because it contains both the UI and the data</li><li>Also called multi-page applications (because each view is represented by a separate page)</li><li>Some example frameworks: PHP, Symphony, JSP, Tapestry, ASP Razor pages</li></ul></li></ul><p><img src="'+r+'" alt="server page"></p><ul><li>Single Page Application (SPA) + API: <ul><li>The UI consists of a single static HTML file. The file is said to be static because the server does not modify the page before delivering it</li><li>The data is dynamically fetched from the server when the client needs it <ul><li>The server that serves the data is commonly called an API/backend server</li><li>The data is generally in JSON format</li><li>It is not necessary to provide an API (for example, a video game SPA)</li></ul></li><li>The page content is altered by the client through DOM manipulation. This allows, for example, to simulate a view or page change</li><li>The client uses Javascript in order to fetch dynamic data and manipulate the DOM</li><li>This model is similar to the one used in mobile apps (the SPA is analogous to the mobile app)</li></ul></li></ul><p><img src="'+n+'" alt="server page"></p><p>An Angular application is an <em>SPA</em> that is complemented by an API if needed. There are other SPA frameworks such as Vue.js, React and Ember.js (the last one is the least popular). Each framework has its own strengths and weaknesses.</p><h2 id="advantages-of-using-angular" tabindex="-1"><a class="header-anchor" href="#advantages-of-using-angular" aria-hidden="true">#</a> Advantages of using Angular</h2><p>Angular presents numerous advantages:</p><ul><li>It is particularly well suited to projects that need to scale and to that effect, it is mainly used for enterprise projects.</li><li>Its rich official library ecosystem enables great consistency across projects which means that when transferring teams or projects you will only need to learn about the new business domain and not an entirely new way of doing things because another library set choice was made.</li><li>It is very well documented and the consistency in the way the framework is used means you are more than likely to find any question you may encounter along your learning journey already answered.</li><li>The Angular team takes a lot of pride in how easy they make updating Angular projects, providing easy steps to follow and some fully automated migration.</li></ul><h2 id="framework-comparison" tabindex="-1"><a class="header-anchor" href="#framework-comparison" aria-hidden="true">#</a> Framework comparison</h2><h3 id="react" tabindex="-1"><a class="header-anchor" href="#react" aria-hidden="true">#</a> React</h3><p><strong>Strengths</strong>: Flexibility, large ecosystem, strong community support.<br><strong>Key Features</strong>: Component-based architecture, promoting reusable UI components.<br><strong>Use Cases</strong>: Ideal for large-scale applications due to its efficient rendering capabilities.</p><h3 id="angular" tabindex="-1"><a class="header-anchor" href="#angular" aria-hidden="true">#</a> Angular</h3><p><strong>Strengths</strong>: Comprehensive framework with built-in features.<br><strong>Key Features</strong>: Dependency injection, powerful routing capabilities, predefined tools.<br><strong>Use Cases</strong>: Best suited for enterprise-level applications that require a robust structure.</p><h3 id="vue-js" tabindex="-1"><a class="header-anchor" href="#vue-js" aria-hidden="true">#</a> Vue.js</h3><p><strong>Strengths</strong>: Simplicity and ease of integration, gentle learning curve.<br><strong>Key Features</strong>: Reactive data binding and a flexible architecture allow for scalability.<br><strong>Use Cases</strong>: Commonly used in projects ranging from small applications to large-scale deployments, especially when a quick setup is needed.</p><h3 id="svelte" tabindex="-1"><a class="header-anchor" href="#svelte" aria-hidden="true">#</a> Svelte</h3><p><strong>Strengths</strong>: Innovative compilation approach, performance.<br><strong>Key Features</strong>: Compiles components at build time, resulting in optimized output with minimal runtime overhead.<br><strong>Use Cases</strong>: Suitable for projects where performance is critical and where developers seek to minimize client-side processing.</p><p>The choice of framework depends on project requirements, team expertise, and preferred development paradigms. Each framework has its unique strengths and is suited for different types of development needs.</p>',27)],l={},o=(0,i(3744).Z)(l,[["render",function(e,a){return(0,t.wg)(),(0,t.iD)("div",null,s)}]])},1243:(e,a,i)=>{i.r(a),i.d(a,{data:()=>t});const t=JSON.parse('{"key":"v-7d1f12dc","path":"/en/presentation.html","title":"Presentation of Angular","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"What is Angular ?","slug":"what-is-angular","link":"#what-is-angular","children":[]},{"level":2,"title":"A bit of history","slug":"a-bit-of-history","link":"#a-bit-of-history","children":[]},{"level":2,"title":"Server generated pages vs SPA + API","slug":"server-generated-pages-vs-spa-api","link":"#server-generated-pages-vs-spa-api","children":[]},{"level":2,"title":"Advantages of using Angular","slug":"advantages-of-using-angular","link":"#advantages-of-using-angular","children":[]},{"level":2,"title":"Framework comparison","slug":"framework-comparison","link":"#framework-comparison","children":[{"level":3,"title":"React","slug":"react","link":"#react","children":[]},{"level":3,"title":"Angular","slug":"angular","link":"#angular","children":[]},{"level":3,"title":"Vue.js","slug":"vue-js","link":"#vue-js","children":[]},{"level":3,"title":"Svelte","slug":"svelte","link":"#svelte","children":[]}]}],"git":{},"filePathRelative":"en/presentation.md"}')},7695:(e,a,i)=>{e.exports=i.p+"assets/img/MPA.c571c58f.svg"},8434:(e,a,i)=>{e.exports=i.p+"assets/img/SPA.5f5dd11c.svg"}}]);